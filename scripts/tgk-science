#!/usr/bin/env python3
# Licensed under a MIT style license - see LICENSE
import os
import sys
import argparse
import logging
import tgk

default_config = os.sep.join([os.path.expanduser('~'), '.config',
                              '41p-lco', 'config.json'])

parser = argparse.ArgumentParser(description='41P/TGK science pipeline.')
parser.add_argument('--rlevel', type=int,
                    help=('Only use this reduction level.  Default is to'
                          ' use the most recent version of each file.'))
parser.add_argument('--reprocess', action='store_true',
                    help=('Set to process all files, including those'
                          ' already processed.'))
parser.add_argument('--continuous', action='store_true',
                    help='Continuously check local archive for new data.')
parser.add_argument('--show-config', action='store_true',
                    help='Read and print the configuration file.')
parser.add_argument('--show-defaults', action='store_true',
                    help='Print the default configuration file.')
parser.add_argument('-v', action='store_true', help='Increase verbosity.')

args = parser.parse_args()

if args.show_config:
    tgk.show_config()
    sys.exit()

if args.show_defaults:
    tgk.show_config(None)
    sys.exit()

# delay import to prevent missing config file crashes
import tgk.science
if args.v:
    logging.getLogger('tgk.sync').setLevel(logging.DEBUG)

try:
    science = tgk.science.Science(rlevel=args.rlevel)
    science.process(all_files=args.reprocess)
    tgk.shutdown_logging('tgk.science')
except Exception as e:
    err = '{}: {}'.format(type(e).__name__, e)
    logging.getLogger('tgk.science').error(err)
    tgk.shutdown_logging('tgk.science')

    if args.v:
        raise(e)
    else:
        print(err)
        sys.exit()
